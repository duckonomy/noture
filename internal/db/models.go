// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type UserTier string

const (
	UserTierFree       UserTier = "free"
	UserTierPremium    UserTier = "premium"
	UserTierEnterprise UserTier = "enterprise"
)

func (e *UserTier) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserTier(s)
	case string:
		*e = UserTier(s)
	default:
		return fmt.Errorf("unsupported scan type for UserTier: %T", src)
	}
	return nil
}

type NullUserTier struct {
	UserTier UserTier
	Valid    bool // Valid is true if UserTier is not NULL
}

func (ns *NullUserTier) Scan(value interface{}) error {
	if value == nil {
		ns.UserTier, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserTier.Scan(value)
}

func (ns NullUserTier) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserTier), nil
}

type ApiToken struct {
	ID         pgtype.UUID
	UserID     pgtype.UUID
	TokenHash  string
	Name       string
	LastUsedAt pgtype.Timestamptz
	ExpiresAt  pgtype.Timestamptz
	CreatedAt  pgtype.Timestamptz
}

type File struct {
	ID           pgtype.UUID
	WorkspaceID  pgtype.UUID
	FilePath     string
	ContentHash  string
	Content      []byte
	SizeBytes    int64
	MimeType     pgtype.Text
	LastModified pgtype.Timestamptz
	CreatedAt    pgtype.Timestamptz
	UpdatedAt    pgtype.Timestamptz
}

type FileMetadatum struct {
	FileID       pgtype.UUID
	Format       string
	ParsedBlocks []byte
	Properties   []byte
	WordCount    pgtype.Int4
	LastParsed   pgtype.Timestamptz
}

type FileVersion struct {
	ID            pgtype.UUID
	FileID        pgtype.UUID
	VersionNumber int32
	ContentHash   string
	Content       []byte
	CreatedAt     pgtype.Timestamptz
}

type SyncOperation struct {
	ID            pgtype.UUID
	WorkspaceID   pgtype.UUID
	FileID        pgtype.UUID
	OperationType string
	ClientID      pgtype.Text
	Status        string
	ErrorMessage  pgtype.Text
	CreatedAt     pgtype.Timestamptz
}

type User struct {
	ID               pgtype.UUID
	Email            string
	PasswordHash     string
	Tier             UserTier
	StorageUsedBytes pgtype.Int8
	CreatedAt        pgtype.Timestamptz
	UpdatedAt        pgtype.Timestamptz
}

type Workspace struct {
	ID                pgtype.UUID
	UserID            pgtype.UUID
	Name              string
	StorageLimitBytes int64
	StorageUsedBytes  pgtype.Int8
	CreatedAt         pgtype.Timestamptz
	UpdatedAt         pgtype.Timestamptz
}
